//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDALC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ProyectoEntities : DbContext
    {
        public ProyectoEntities()
            : base("name=ProyectoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ACT_TRAB> ACT_TRAB { get; set; }
        public DbSet<ACTIVIDAD> ACTIVIDAD { get; set; }
        public DbSet<ASISTENTE> ASISTENTE { get; set; }
        public DbSet<CHECKLIST> CHECKLIST { get; set; }
        public DbSet<CLIENTE_EMPRESA> CLIENTE_EMPRESA { get; set; }
        public DbSet<COMUNA> COMUNA { get; set; }
        public DbSet<CONTRATO> CONTRATO { get; set; }
        public DbSet<CONTRATO_PLAN> CONTRATO_PLAN { get; set; }
        public DbSet<CONTRATO_SERVICIO> CONTRATO_SERVICIO { get; set; }
        public DbSet<CREDENCIAL> CREDENCIAL { get; set; }
        public DbSet<DETALLE_FACTURA> DETALLE_FACTURA { get; set; }
        public DbSet<ESTADO_ACTIVIDAD> ESTADO_ACTIVIDAD { get; set; }
        public DbSet<ESTADO_CHECK> ESTADO_CHECK { get; set; }
        public DbSet<ESTADO_CLIENTE> ESTADO_CLIENTE { get; set; }
        public DbSet<ESTADO_CREDENCIAL> ESTADO_CREDENCIAL { get; set; }
        public DbSet<ESTADO_FACTURA> ESTADO_FACTURA { get; set; }
        public DbSet<FACTURA> FACTURA { get; set; }
        public DbSet<GENERO> GENERO { get; set; }
        public DbSet<INTERACCION> INTERACCION { get; set; }
        public DbSet<LOGIN_FAIL> LOGIN_FAIL { get; set; }
        public DbSet<MATERIAL> MATERIAL { get; set; }
        public DbSet<PAIS> PAIS { get; set; }
        public DbSet<PLAN> PLAN { get; set; }
        public DbSet<PROFESIONAL> PROFESIONAL { get; set; }
        public DbSet<REGION> REGION { get; set; }
        public DbSet<REGISTRO_ERROR> REGISTRO_ERROR { get; set; }
        public DbSet<REP_CLI_EMP> REP_CLI_EMP { get; set; }
        public DbSet<REP_PROFESIONAL> REP_PROFESIONAL { get; set; }
        public DbSet<ROL> ROL { get; set; }
        public DbSet<RUBRO> RUBRO { get; set; }
        public DbSet<SERVICIO> SERVICIO { get; set; }
        public DbSet<TIPO_INTERACCION> TIPO_INTERACCION { get; set; }
        public DbSet<PLAN_SERVICIO> PLAN_SERVICIO { get; set; }
    
        public virtual int FN_MOSTRAR_PROFESIONALES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FN_MOSTRAR_PROFESIONALES");
        }
    
        public virtual int SP_AUTENTICAR_USUARIO(string i_USUARIO, string i_CONTRASENIA, ObjectParameter o_RESULT)
        {
            var i_USUARIOParameter = i_USUARIO != null ?
                new ObjectParameter("I_USUARIO", i_USUARIO) :
                new ObjectParameter("I_USUARIO", typeof(string));
    
            var i_CONTRASENIAParameter = i_CONTRASENIA != null ?
                new ObjectParameter("I_CONTRASENIA", i_CONTRASENIA) :
                new ObjectParameter("I_CONTRASENIA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AUTENTICAR_USUARIO", i_USUARIOParameter, i_CONTRASENIAParameter, o_RESULT);
        }
    
        public virtual int SP_BLOQUEAR_USUARIO(string i_USUARIO)
        {
            var i_USUARIOParameter = i_USUARIO != null ?
                new ObjectParameter("I_USUARIO", i_USUARIO) :
                new ObjectParameter("I_USUARIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BLOQUEAR_USUARIO", i_USUARIOParameter);
        }
    
        public virtual int SP_INSERTANTOTEST(Nullable<decimal> aSD, string aSDAWER)
        {
            var aSDParameter = aSD.HasValue ?
                new ObjectParameter("ASD", aSD) :
                new ObjectParameter("ASD", typeof(decimal));
    
            var aSDAWERParameter = aSDAWER != null ?
                new ObjectParameter("ASDAWER", aSDAWER) :
                new ObjectParameter("ASDAWER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERTANTOTEST", aSDParameter, aSDAWERParameter);
        }
    
        public virtual int SP_INSERT_PROFESIONAL(string i_RUT_PRO, string i_NOMBRE, string aP_PAT, string aP_MAT, string i_FEC_NAC_DD_MM_YYYY, Nullable<decimal> i_CEL, string i_DOMI, string i_CORREO, Nullable<decimal> i_GENERO, Nullable<decimal> i_COMUNA, string i_USERNAME, string i_PASSWORD, ObjectParameter o_RESULT)
        {
            var i_RUT_PROParameter = i_RUT_PRO != null ?
                new ObjectParameter("I_RUT_PRO", i_RUT_PRO) :
                new ObjectParameter("I_RUT_PRO", typeof(string));
    
            var i_NOMBREParameter = i_NOMBRE != null ?
                new ObjectParameter("I_NOMBRE", i_NOMBRE) :
                new ObjectParameter("I_NOMBRE", typeof(string));
    
            var aP_PATParameter = aP_PAT != null ?
                new ObjectParameter("AP_PAT", aP_PAT) :
                new ObjectParameter("AP_PAT", typeof(string));
    
            var aP_MATParameter = aP_MAT != null ?
                new ObjectParameter("AP_MAT", aP_MAT) :
                new ObjectParameter("AP_MAT", typeof(string));
    
            var i_FEC_NAC_DD_MM_YYYYParameter = i_FEC_NAC_DD_MM_YYYY != null ?
                new ObjectParameter("I_FEC_NAC_DD_MM_YYYY", i_FEC_NAC_DD_MM_YYYY) :
                new ObjectParameter("I_FEC_NAC_DD_MM_YYYY", typeof(string));
    
            var i_CELParameter = i_CEL.HasValue ?
                new ObjectParameter("I_CEL", i_CEL) :
                new ObjectParameter("I_CEL", typeof(decimal));
    
            var i_DOMIParameter = i_DOMI != null ?
                new ObjectParameter("I_DOMI", i_DOMI) :
                new ObjectParameter("I_DOMI", typeof(string));
    
            var i_CORREOParameter = i_CORREO != null ?
                new ObjectParameter("I_CORREO", i_CORREO) :
                new ObjectParameter("I_CORREO", typeof(string));
    
            var i_GENEROParameter = i_GENERO.HasValue ?
                new ObjectParameter("I_GENERO", i_GENERO) :
                new ObjectParameter("I_GENERO", typeof(decimal));
    
            var i_COMUNAParameter = i_COMUNA.HasValue ?
                new ObjectParameter("I_COMUNA", i_COMUNA) :
                new ObjectParameter("I_COMUNA", typeof(decimal));
    
            var i_USERNAMEParameter = i_USERNAME != null ?
                new ObjectParameter("I_USERNAME", i_USERNAME) :
                new ObjectParameter("I_USERNAME", typeof(string));
    
            var i_PASSWORDParameter = i_PASSWORD != null ?
                new ObjectParameter("I_PASSWORD", i_PASSWORD) :
                new ObjectParameter("I_PASSWORD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PROFESIONAL", i_RUT_PROParameter, i_NOMBREParameter, aP_PATParameter, aP_MATParameter, i_FEC_NAC_DD_MM_YYYYParameter, i_CELParameter, i_DOMIParameter, i_CORREOParameter, i_GENEROParameter, i_COMUNAParameter, i_USERNAMEParameter, i_PASSWORDParameter, o_RESULT);
        }
    
        public virtual int SP_TEST(ObjectParameter o_RES)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TEST", o_RES);
        }
    }
}
